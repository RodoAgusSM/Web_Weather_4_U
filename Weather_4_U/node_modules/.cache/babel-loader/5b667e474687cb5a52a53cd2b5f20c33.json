{"ast":null,"code":"var _jsxFileName = \"/Users/rodoagus/Desktop/Personal_projects/Web_Weather_4_U/Weather_4_U/src/components/SunriseSunsetInfo/SunsetSunriseInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { GlobalStyle, WeatherCard, MiInfo, SocialNetworkName, SocialNetworkItem, NetworkContainer, NetworkMapContainer, MiInfoContainer, BackContainer, BackIcon } from '../../styles/styles';\nimport { findLanguageByKey } from '../../languages/Languages';\nimport { Code, BreakLine } from '../../styles/styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SunriseSunsetInfo = _ref => {\n  _s();\n\n  let {\n    actualLanguage,\n    timezone,\n    sunrise,\n    sunset\n  } = _ref;\n  const fullLanguage = findLanguageByKey(actualLanguage);\n  let [timeChanged, setTimeChanged] = useState([]);\n  useEffect(() => {\n    toLocalCityTime();\n  });\n\n  const toLocalCityTime = () => {\n    let date = new Date();\n    let utc = date.getTime() + date.getTimezoneOffset() * 60000;\n    let nd = new Date(utc + 3600000 * -3);\n    console.log(nd.toLocaleString());\n    console.log(new Intl(timezone));\n    console.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n    console.log(date.toLocaleString('es', {\n      timezone,\n      timeStyle: 'long'\n    }).split(' ').slice(-1)[0]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Code, {\n      children: [fullLanguage.words.sunrise, \" \", sunrise]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(BreakLine, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Code, {\n      children: [fullLanguage.words.sunset, \" \", sunset]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 3\n  }, this);\n};\n\n_s(SunriseSunsetInfo, \"eVv4GyTs/Oi1rGOitKvXHR0sb5Y=\");\n\n_c = SunriseSunsetInfo;\nexport default SunriseSunsetInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"SunriseSunsetInfo\");","map":{"version":3,"names":["React","useState","useEffect","GlobalStyle","WeatherCard","MiInfo","SocialNetworkName","SocialNetworkItem","NetworkContainer","NetworkMapContainer","MiInfoContainer","BackContainer","BackIcon","findLanguageByKey","Code","BreakLine","SunriseSunsetInfo","actualLanguage","timezone","sunrise","sunset","fullLanguage","timeChanged","setTimeChanged","toLocalCityTime","date","Date","utc","getTime","getTimezoneOffset","nd","console","log","toLocaleString","Intl","DateTimeFormat","resolvedOptions","timeZone","timeStyle","split","slice","words"],"sources":["/Users/rodoagus/Desktop/Personal_projects/Web_Weather_4_U/Weather_4_U/src/components/SunriseSunsetInfo/SunsetSunriseInfo.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n\tGlobalStyle,\n\tWeatherCard,\n\tMiInfo,\n\tSocialNetworkName,\n\tSocialNetworkItem,\n\tNetworkContainer,\n\tNetworkMapContainer,\n\tMiInfoContainer,\n\tBackContainer,\n\tBackIcon,\n} from '../../styles/styles';\nimport { findLanguageByKey } from '../../languages/Languages';\nimport { Code, BreakLine } from '../../styles/styles';\n\nconst SunriseSunsetInfo = ({ actualLanguage, timezone, sunrise, sunset }) => {\n\tconst fullLanguage = findLanguageByKey(actualLanguage);\n\tlet [timeChanged, setTimeChanged] = useState([]);\n\tuseEffect(() => {\n\t\ttoLocalCityTime();\n\t});\n\n\tconst toLocalCityTime = () => {\n\t\tlet date = new Date();\n\t\tlet utc = date.getTime() + date.getTimezoneOffset() * 60000;\n\t\tlet nd = new Date(utc + 3600000 * -3);\n\t\tconsole.log(nd.toLocaleString());\n\t\tconsole.log(new Intl(timezone));\n\t\tconsole.log(Intl.DateTimeFormat().resolvedOptions().timeZone);\n\t\tconsole.log(date.toLocaleString('es', { timezone, timeStyle: 'long' }).split(' ').slice(-1)[0]);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Code>\n\t\t\t\t{fullLanguage.words.sunrise} {sunrise}\n\t\t\t</Code>\n\t\t\t<BreakLine />\n\t\t\t<Code>\n\t\t\t\t{fullLanguage.words.sunset} {sunset}\n\t\t\t</Code>\n\t\t</div>\n\t);\n};\n\nexport default SunriseSunsetInfo;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SACCC,WADD,EAECC,WAFD,EAGCC,MAHD,EAICC,iBAJD,EAKCC,iBALD,EAMCC,gBAND,EAOCC,mBAPD,EAQCC,eARD,EASCC,aATD,EAUCC,QAVD,QAWO,qBAXP;AAYA,SAASC,iBAAT,QAAkC,2BAAlC;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,qBAAhC;;;AAEA,MAAMC,iBAAiB,GAAG,QAAmD;EAAA;;EAAA,IAAlD;IAAEC,cAAF;IAAkBC,QAAlB;IAA4BC,OAA5B;IAAqCC;EAArC,CAAkD;EAC5E,MAAMC,YAAY,GAAGR,iBAAiB,CAACI,cAAD,CAAtC;EACA,IAAI,CAACK,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAAC,EAAD,CAA5C;EACAC,SAAS,CAAC,MAAM;IACfsB,eAAe;EACf,CAFQ,CAAT;;EAIA,MAAMA,eAAe,GAAG,MAAM;IAC7B,IAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;IACA,IAAIC,GAAG,GAAGF,IAAI,CAACG,OAAL,KAAiBH,IAAI,CAACI,iBAAL,KAA2B,KAAtD;IACA,IAAIC,EAAE,GAAG,IAAIJ,IAAJ,CAASC,GAAG,GAAG,UAAU,CAAC,CAA1B,CAAT;IACAI,OAAO,CAACC,GAAR,CAAYF,EAAE,CAACG,cAAH,EAAZ;IACAF,OAAO,CAACC,GAAR,CAAY,IAAIE,IAAJ,CAAShB,QAAT,CAAZ;IACAa,OAAO,CAACC,GAAR,CAAYE,IAAI,CAACC,cAAL,GAAsBC,eAAtB,GAAwCC,QAApD;IACAN,OAAO,CAACC,GAAR,CAAYP,IAAI,CAACQ,cAAL,CAAoB,IAApB,EAA0B;MAAEf,QAAF;MAAYoB,SAAS,EAAE;IAAvB,CAA1B,EAA2DC,KAA3D,CAAiE,GAAjE,EAAsEC,KAAtE,CAA4E,CAAC,CAA7E,EAAgF,CAAhF,CAAZ;EACA,CARD;;EAUA,oBACC;IAAA,wBACC,QAAC,IAAD;MAAA,WACEnB,YAAY,CAACoB,KAAb,CAAmBtB,OADrB,OAC+BA,OAD/B;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,eAIC,QAAC,SAAD;MAAA;MAAA;MAAA;IAAA,QAJD,eAKC,QAAC,IAAD;MAAA,WACEE,YAAY,CAACoB,KAAb,CAAmBrB,MADrB,OAC8BA,MAD9B;IAAA;MAAA;MAAA;MAAA;IAAA,QALD;EAAA;IAAA;IAAA;IAAA;EAAA,QADD;AAWA,CA5BD;;GAAMJ,iB;;KAAAA,iB;AA8BN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}